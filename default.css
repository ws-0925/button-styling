
@font-face {
  font-family: "Geist Sans";
  src: url("https://assets.codepen.io/605876/GeistVF.ttf") format("truetype");
}

*,
*:after,
*:before {
	box-sizing: border-box;
	transform-style: preserve-3d;
}
:root {
	--saturation: 20%;
	--transition: 0.15s;
  --glow: hsl(var(--hue, 150) 80% 70% / var(--alpha, 1));
	--border-radius: calc(var(--radius) * 1px);
	--border-width: calc(var(--thickness) * 1px);
	--active: 0;
	--glow-spread: calc(var(--spread) * 1deg);
	--bg: hsl(0 0% 0%);
	--dark: #ffffff;
  --color: var(--dark);
}

body {
/*	background: hsl(260 0% 0%);*/
	background: hsl(0 0% 14%);
	display: grid;
	place-items: center;
	min-height: 100vh;
	font-family: 'Geist Sans', arial, system-ui, sans-serif;
	overflow: hidden;
}

button {
	--bg:
		radial-gradient(
			40% 50% at center 100%,
			hsl(var(--hue) var(--saturation) 72% / 0.15),
			transparent
		),
		radial-gradient(
			80% 100% at center 120%,
			hsl(var(--hue) var(--saturation) 70% / 0.2),
			transparent
		),
		hsl(260 0% 2%);
	background: var(--bg);
	/*width: 194px;
	height: 73px;*/
	font-size: 2rem;
	font-family: 'Geist Sans';
	font-weight: 500;
	cursor: pointer;
	padding: 0.9em 2em;
	min-width: 280px;
	display: grid;
	border: 0;
  place-items: center;
	white-space: nowrap;
	border-radius: calc(var(--border-radius, 8) * 1px);/*var(--border-radius);*/
	position: relative;
	box-shadow:
	  0 0.025em 0.4em -0.02em hsl(0 0% 100% / 0.25),
		0 0.05em 0 0 hsl(260 0% 50%) inset,
		0 -0.05em 0 0 hsl(260 0% 0%) inset;
	transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
/*	scale: calc(1 + (var(--active) * 0.025));*/
}

/* Feint border */
button::before {
	--saturation: 90%;
	content: "";
	position: absolute;
	inset: 0;
	border: 1px solid hsl(var(--hue) var(--saturation) 80% / 0.3);
	border-radius: calc(var(--border-radius, 8) * 1px);/*var(--border-radius);*/
	pointer-events: none;
}

button:active {
/*  scale: 1;*/
}

@-webkit-keyframes flip {
	to {
		rotate: 360deg;
	}
}

@keyframes flip {
	to {
		rotate: 360deg;
	}
}

.spark:before {
	content: "";
	position: absolute;
}

/* Purely to decorate the use of CQ elements sliding along */
.spark:after {
/*	background: red;*/
	content: "";
	position: absolute;
	inset: 0;
	z-index: -1;
}

/* Optional backdrop â€“ For some reason, if you go with the mask-composite, you lose the glow... */
.backdrop {
	position: absolute;
	inset: 0;
	background:
		linear-gradient(transparent 5%, hsl(0 0% 0% / 0.5), transparent) padding-box,
		radial-gradient(
			40% 50% at center 100%,
			hsl(var(--hue) var(--saturation) 72% / 0.15),
			transparent
		) padding-box,
		radial-gradient(
			80% 100% at center 120%,
			hsl(var(--hue) var(--saturation) 70% / 0.2),
			transparent
		) padding-box,
		linear-gradient(hsl(var(--hue) var(--saturation) 5%), hsl(var(--hue) var(--saturation) 4%)) padding-box;
	border: var(--border-width) solid transparent;
	border-radius: calc(var(--border-radius, 8) * 1px);/*var(--border-radius);*/
	transition: background var(--transition) opacity var(--transition);
/*	opacity: 0;*/
}

button:is(:hover, :focus-visible) {
	--active: 1;
	outline: none;
}

.text {
	translate: 0 0;
	font-family: 'Geist Sans';
	font-weight: 80;
	letter-spacing: 0.01ch;
	background:
		linear-gradient(
			95deg,
			hsl(0 0% 90%) 15%,
			hsl(0 0% 50% / 1),
			hsl(0 0% 100% / 0.2),
			hsl(0 0% 80%),
			hsl(0 0% 90%) 85%);
	background-size: 500% 100%;
	background-position: 0 0;
	-webkit-background-clip: text;
	color: transparent;
	transition: background-position calc(var(--transition) * 6);
}

/*button:is(:hover, :focus-visible) .text {
	-webkit-animation: shimmer 1s both;
	        animation: shimmer 1s both;
}*/

/*@-webkit-keyframes shimmer {
	0% {
		background-position: 100% 0;
	}
}*/

@keyframes shimmer {
	0% {
		background-position: 100% 0;
	}
}

button .spark__container {
  position: absolute;
  inset: 0px;
	/* With a backdrop */
	overflow: hidden;
	/* Without a backdrop	*/
  /*mask: linear-gradient(transparent, transparent), linear-gradient(white, white);
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
  border: var(--border-width) solid transparent;*/
}

.glows {
	filter: blur(calc(var(--blur) * 1px));
	container-type: size;
	position: absolute;
	inset: 0;
}

button > .spark__container {
	container-type: size;
}

button .spark:nth-of-type(2) {
	rotate: 180deg;
	animation-direction: alternate-reverse;
}

button .spark {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  aspect-ratio: 1;
  border-radius: 0;
  overflow: visible;
  -webkit-mask: none;
          mask: none;
  -webkit-animation: slide calc(var(--speed) * 1s) ease-in-out infinite alternate;
          animation: slide calc(var(--speed) * 1s) ease-in-out infinite alternate;
  -webkit-animation-play-state: paused;
          animation-play-state: paused;
}

button:hover .spark {
	-webkit-animation-play-state: running;
	        animation-play-state: running;
}

button .spark:before {
  inset: -100%;
  background: conic-gradient(
    from calc(270deg - (var(--glow-spread) * 0.5)),
    var(--glow) 0,
    var(--glow) var(--glow-spread),
    transparent var(--glow-spread));
  translate: 0 0;
  transform: rotate(0deg);
  width: auto;
  -webkit-animation: spin calc(var(--speed) * 2s) infinite linear;
          animation: spin calc(var(--speed) * 2s) infinite linear;
  -webkit-animation-play-state: paused;
          animation-play-state: paused;
}

button:is(:hover, :focus-visible) .spark:before {
	-webkit-animation-play-state: running;
	        animation-play-state: running;
}

@-webkit-keyframes spin {
  0% {
    rotate: 0deg;
  }
  15%, 35% {
    rotate: 90deg;
  }
  65%, 85% {
    rotate: 270deg;
  }
  100% {
    rotate: 360deg;
  }
}

@keyframes spin {
  0% {
    rotate: 0deg;
  }
  15%, 35% {
    rotate: 90deg;
  }
  65%, 85% {
    rotate: 270deg;
  }
  100% {
    rotate: 360deg;
  }
}

@-webkit-keyframes slide {
  to {
    translate: calc(100cqw - 100%) 0;
  }
}

@keyframes slide {
  to {
    translate: calc(100cqw - 100%) 0;
  }
}

/* Overrides */
button .spark {
	background: transparent;
}
button .spark__container {
	border-radius: calc(var(--border-radius, 8) * 1px);/*var(--border-radius);*/
	opacity: 0;
}

.spark {
	transition: opacity var(--transition);
	opacity: 0;
}

button:is(:hover, :focus-visible) .spark {
	opacity: 1;
}

button:is(:hover, :focus-visible) .spark__container:not(.spark__container--reveal) {
	-webkit-animation: reveal calc(var(--window) * 1s) both;
	        animation: reveal calc(var(--window) * 1s) both;
}

@-webkit-keyframes reveal {
	0%, 100% {
		opacity: 0;
	}
	20%, 80% {
		opacity: 1;
	}
}

@keyframes reveal {
	0%, 100% {
		opacity: 0;
	}
	20%, 80% {
		opacity: 1;
	}
}


[data-exploded] .spark,
[data-exploded] .spark__container:not(.spark__container--reveal),
[data-imploding] .spark,
[data-imploding] .spark__container:not(.spark__container--reveal),
[data-show-glows=true] .spark,
[data-show-glows=true] .spark__container:not(.spark__container--reveal) {
	opacity: 1;
}

[data-exploded] button .spark::before,
[data-exploded] button .spark,
[data-imploding] button .spark::before,
[data-imploding] button .spark,
[data-show-glows=true] button .spark::before,
[data-show-glows=true] button .spark {
	-webkit-animation-play-state: running;
	        animation-play-state: running;
}
[data-exploded] button:is(:hover, :focus-visible) .spark__container,
[data-show-glows=true] button:is(:hover, :focus-visible) .spark__container {
	-webkit-animation: none;
	        animation: none;
}

/* 3D stuff */
* { transform-style: preserve-3d; }

[data-exploded] .scene {
	transform: rotateX(-30deg) rotateY(45deg) rotateX(90deg);
}

/* Timings */
[data-exploded] .scene {
	transition: transform 1s;
}

[data-exploded] .spark__container,
[data-exploded] .glows {
	transition: transform 1s 1.5s;
}

[data-exploded] button .text {
	transition: transform 1s 1.5s;
}

[data-exploded] .spark__container--reveal {
	transition: opacity 1s 4s, transform 1s 1.5s;
}

[data-exploded] .label {
	opacity: 1;
	transition: opacity 0.5s 5s;
}

[data-exploded] .label:nth-of-type(2) {
	transition: opacity 0.5s 5.1s;
}
[data-exploded] .label:nth-of-type(3) {
	transition: opacity 0.5s 5.2s;
}

[data-exploded] .measurements {
	transition: opacity 0.5s 6s;
}

/* Reverse */

.measurements {
	transition: opacity 0.5s 0s;
	pointer-events: none;
}

.label {
	transition: opacity 0.5s 1.2s;
	pointer-events: none;
}
.label:nth-of-type(2) {
	transition: opacity 0.5s 1.1s;
}
.label:nth-of-type(3) {
	transition: opacity 0.5s 1s;
}

button > .spark__container--reveal {
	transition: opacity 1s 3s;
}

.spark__container,
.glows {
	transition: transform 1s 4s;
}

button .text {
	transition: transform 1s 4s;
}

.scene {
	transition: transform 1s 6s;
}


/* End Timings stuff */




[data-exploded] .text {
	transform: translate3d(0, 0, 200px);
}

[data-imploding] button > .spark__container:not(.spark__container--reveal),
[data-imploding] .glows,
[data-exploded] button > .spark__container:not(.spark__container--reveal),
[data-exploded] .glows {
	overflow: visible;
	-webkit-mask: linear-gradient(transparent, transparent), linear-gradient(white, white);
	        mask: linear-gradient(transparent, transparent), linear-gradient(white, white);
  -webkit-mask-clip: padding-box, border-box;
          mask-clip: padding-box, border-box;
  -webkit-mask-composite: source-in, xor;
          mask-composite: intersect;
  border: var(--border-width) solid transparent;
}

[data-exploded] button > .spark__container:not(.spark__container--reveal),
[data-exploded] .glows {
	opacity: 1;
	transform: translate3d(0, 0, 100px);
}

.spark__container--reveal {
	transform: translate3d(0, 0, 100px);
}

[data-imploding] .spark__container--reveal {
	overflow: visible;
	border-radius: 0;
}
[data-exploded] .spark__container--reveal {
	opacity: 1;
	overflow: visible;
	border-radius: 0;
}

.spark__container--reveal .spark::before {
	opacity: 0.25;
}

.label {
	position: absolute;
	left: calc(100% + 6rem);
	translate: 0 -50%;
	top: 50%;
	color: hsl(0 0% 80%);
	font-weight: 40;
	opacity: 0;
}

.spark__container--reveal .spark::after {
/*	background: red;*/
	opacity: 0.65;
	border: 4px dashed hsl(0 0% 80%);
}

[data-exploded] .measurements {
	opacity: 1;
}

.labels {
	position: absolute;
	inset: 0;
}

.label--glow {
	transform: translate3d(0, 0, 100px);
}
.label--text {
	transform: translate3d(0, 0, 200px);
}

.measurements {
	position: absolute;
	inset: 0;
	font-weight: 40;
	font-family: 'Geist Sans';
	font-size: 1em;
	color: hsl(0 0% 50%);
	opacity: 0;
	pointer-events: none;
}

.width {
	position: absolute;
	left: 50%;
	top: 100%;
	translate: -50% 100%;
}

.height {
	position: absolute;
	right: 100%;
	top: 50%;
	translate: 0% -50%;
	rotate: 90deg;
}





section {
  transition: transform 1s 1.5s;
}

article:not(.faux) p, .faux {
  transition: transform 1s 0s;
}

[data-exploded] section {
  transform: rotateX(60deg) rotate(25deg);
}

[data-imploding] article:not(.faux),
[data-exploded] article:not(.faux) {
  background: var(--bg) padding-box;
}

[data-exploded] article:not(.faux) p {
  transform: translate3d(0, 0, 200px);
}

[data-exploded] .faux {
  transform: translate3d(0, 0, -200px);
}
[data-exploded] .faux,
[data-exploded] article:not(.faux) p {
  transition: transform 1s 1.5s;
}

[data-exploded] label {
  opacity: 1;
  transition: 1s 1.5s;
}

[data-exploded] section {
  transition: transform 1s;
}

@property --angle {
  inherits: true;
  initial-value: 0deg;
  syntax: '<angle>';
}

section {
  --angle: 0;
  -webkit-animation: rotate-gradient calc(var(--border-speed, 2) * 1s) infinite linear;
          animation: rotate-gradient calc(var(--border-speed, 2) * 1s) infinite linear;
  -webkit-animation-play-state: running;
          animation-play-state: running;
}

section:hover {
  -webkit-animation-play-state: paused;
          animation-play-state: paused;
}

article:last-of-type:hover {
  --alpha: 0;
}

section {
  --gradient: conic-gradient(from calc(180deg + var(--angle)) at 50% 70%,hsla(0,0%,98%,1) 0deg,#eec32d 72.0000010728836deg,#ec4b4b 144.0000021457672deg,#709ab9 216.00000858306885deg,#4dffbf 288.0000042915344deg,hsla(0,0%,98%,1) 1turn);
}

@-webkit-keyframes rotate-gradient {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}

@keyframes rotate-gradient {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}

article {
  color: hsl(0 0% 92%);
  background:
    linear-gradient(var(--bg), var(--bg)) padding-box,
    var(--gradient) border-box;
  border: calc(var(--border-width, 2) * 1px) solid transparent;
/*  padding: 2rem;*/
  border-radius: calc(var(--border-radius, 8) * 1px);
/*  width: 26ch;*/
width:289px;
	height:102px;
  aspect-ratio: 4 / 3;
  display: grid;
  place-items: center;
  text-align: center;
  font-size: 1.5rem;
  font-weight: 300;
  position: relative;
  transform: translate3d(0, 0, 0);
  transition: background 0.2s;
}
article:not(.faux) { z-index: 2; }
article:not(.faux)::before {
  content: "";
  position: absolute;
  inset: calc(var(--border-width) * -1px);
  border-radius: calc(var(--border-radius) * 1px);
  background: hsl(0 0% 0%);
  opacity: var(--alpha, 0.5);
  transition: opacity 0.2s;
}

/* 2 */



span.buttonspan {
  max-width: 300px;
	display: block;
}
span.butionspan:nth-of-type(1) {
  position: absolute;
  opacity: 0;
}
.word {
  position: relative;
  display: inline-block;
}
[data-char] {
  color: transparent;
  position: relative;
}
[data-char]:after {
  --txt: attr(data-char);
  -webkit-animation-duration: 0.2s;
          animation-duration: 0.2s;
  -webkit-animation-delay: 0.5s;
          animation-delay: 0.5s;
  -webkit-animation-timing-function: steps(1);
          animation-timing-function: steps(1);
  -webkit-animation-fill-mode: backwards;
          animation-fill-mode: backwards;
  content: var(--txt);
  color: var(--color);
  position: absolute;
  left: 0;
  top: 0;
}
/**
 * Themeing
*/
.page {
  align-items: center;
  display: flex;
  height: 100vh;
  justify-content: center;
  position: relative;
/*  scroll-snap-align: center;*/
  width: 100vw;
}

@-webkit-keyframes glitch-switch {
  0% {
    content: var(--char-0);
  }
  10% {
    content: var(--char-1);
  }
  20% {
    content: var(--char-2);
  }
  30% {
    content: var(--char-3);
  }
  40% {
    content: var(--char-4);
  }
  50% {
    content: var(--char-5);
  }
  60% {
    content: var(--char-6);
  }
  70% {
    content: var(--char-7);
  }
  80% {
    content: var(--char-8);
  }
  90% {
    content: var(--char-9);
  }
  100% {
    content: var(--char-0);
  }
}
@keyframes glitch-switch {
  0% {
    content: var(--char-0);
  }
  10% {
    content: var(--char-1);
  }
  20% {
    content: var(--char-2);
  }
  30% {
    content: var(--char-3);
  }
  40% {
    content: var(--char-4);
  }
  50% {
    content: var(--char-5);
  }
  60% {
    content: var(--char-6);
  }
  70% {
    content: var(--char-7);
  }
  80% {
    content: var(--char-8);
  }
  90% {
    content: var(--char-9);
  }
  100% {
    content: var(--char-0);
  }
}
/* 2 end */